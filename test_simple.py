# test_simple.py
import pandas as pd
from feature_extractor import RussianFeatureExtractor


def simple_test():
    """–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä–∞"""
    print("üß™ –ü–†–û–°–¢–û–ô –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ô –í–ï–†–°–ò–ò")
    print("=" * 50)

    # –°–æ–∑–¥–∞–µ–º —ç–∫—Å—Ç—Ä–∞–∫—Ç–æ—Ä
    extractor = RussianFeatureExtractor(use_heavy_models=False)

    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å —Ä–∞–∑–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º –æ—Ç–≤–µ—Ç–æ–≤
    test_cases = [
        {
            'name': '–•–æ—Ä–æ—à–∏–π –æ—Ç–≤–µ—Ç',
            'question': '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º –≥–æ—Ä–æ–¥–µ',
            'answer': '–ü—Ä–∏–≤–µ—Ç! –Ø –∂–∏–≤—É –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ. –≠—Ç–æ –∫—É–ª—å—Ç—É—Ä–Ω–∞—è —Å—Ç–æ–ª–∏—Ü–∞ –†–æ—Å—Å–∏–∏ —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –¥–≤–æ—Ä—Ü–∞–º–∏, –∫–∞–Ω–∞–ª–∞–º–∏ –∏ –±–æ–≥–∞—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π.',
            'type': 1
        },
        {
            'name': '–°—Ä–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç',
            'question': '–ß—Ç–æ –≤—ã –ª—é–±–∏—Ç–µ –¥–µ–ª–∞—Ç—å?',
            'answer': '–õ—é–±–ª—é —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏ –∏ –≥—É–ª—è—Ç—å. –ò–Ω–æ–≥–¥–∞ —Ö–æ–∂—É –≤ –∫–∏–Ω–æ.',
            'type': 2
        },
        {
            'name': '–ü–ª–æ—Ö–æ–π –æ—Ç–≤–µ—Ç',
            'question': '–û–ø–∏—à–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É',
            'answer': '–ù–µ –∑–Ω–∞—é...',
            'type': 4
        }
    ]

    print("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("-" * 60)

    for case in test_cases:
        test_df = pd.DataFrame([{
            '–¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞': case['question'],
            '–¢—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞': case['answer'],
            '‚Ññ –≤–æ–ø—Ä–æ—Å–∞': case['type']
        }])

        features = extractor.extract_all_features(test_df.iloc[0])

        print(f"\n{case['name']}:")
        print(f"  –û—Ç–≤–µ—Ç: '{case['answer'][:40]}...'")
        print(f"  composite_quality_score: {features['composite_quality_score']:.3f}")
        print(f"  grammar_quality: {features['grammar_quality']:.3f}")
        print(f"  style_score: {features['style_score']:.3f}")
        print(f"  word_count: {features['word_count']}")
        print(f"  lexical_diversity: {features['lexical_diversity']:.3f}")


if __name__ == "__main__":
    simple_test()