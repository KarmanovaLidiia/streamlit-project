import pandas as pd
import numpy as np

# –ó–∞–≥—Ä—É–∑–∏ —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
df = pd.read_csv('predicted_from_api.csv', sep=';')

print("üìä –ê–ù–ê–õ–ò–ó –ö–ê–ß–ï–°–¢–í–ê –ü–†–ï–î–°–ö–ê–ó–ê–ù–ò–ô")
print("=" * 50)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–æ–Ω–æ–∫
if '–û—Ü–µ–Ω–∫–∞ —ç–∫–∑–∞–º–µ–Ω–∞—Ç–æ—Ä–∞' in df.columns and 'pred_score' in df.columns:
    # –£–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–∏ –≥–¥–µ –Ω–µ—Ç –∏—Å—Ç–∏–Ω–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫
    df_clean = df.dropna(subset=['–û—Ü–µ–Ω–∫–∞ —ç–∫–∑–∞–º–µ–Ω–∞—Ç–æ—Ä–∞'])

    if len(df_clean) > 0:
        true_scores = df_clean['–û—Ü–µ–Ω–∫–∞ —ç–∫–∑–∞–º–µ–Ω–∞—Ç–æ—Ä–∞'].astype(float)
        pred_scores = df_clean['pred_score'].astype(float)

        # –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        mae = (abs(true_scores - pred_scores)).mean()
        rmse = ((true_scores - pred_scores) ** 2).mean() ** 0.5

        print(f"üìà –û–±—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏:")
        print(f"   MAE (—Å—Ä–µ–¥–Ω—è—è –∞–±—Å–æ–ª—é—Ç–Ω–∞—è –æ—à–∏–±–∫–∞): {mae:.3f}")
        print(f"   RMSE (—Å—Ä–µ–¥–Ω–µ–∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–∞—è –æ—à–∏–±–∫–∞): {rmse:.3f}")
        print(f"   –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è: {true_scores.corr(pred_scores):.3f}")

        # –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º
        print(f"\nüìã –ü–æ —Ç–∏–ø–∞–º –≤–æ–ø—Ä–æ—Å–æ–≤:")
        for q in [1, 2, 3, 4]:
            mask = df_clean['‚Ññ –≤–æ–ø—Ä–æ—Å–∞'] == q
            if mask.any():
                q_true = true_scores[mask]
                q_pred = pred_scores[mask]
                q_mae = (abs(q_true - q_pred)).mean()

                # –î–∏–∞–ø–∞–∑–æ–Ω –±–∞–ª–ª–æ–≤ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞
                if q in [1, 3]:
                    max_score = 1
                else:
                    max_score = 2

                print(f"   –í–æ–ø—Ä–æ—Å {q} (0-{max_score}): MAE = {q_mae:.3f}, –ø—Ä–∏–º–µ—Ä–æ–≤ = {len(q_true)}")

    else:
        print("‚ùå –í —Ñ–∞–π–ª–µ –Ω–µ—Ç —Å—Ç—Ä–æ–∫ —Å –æ—Ü–µ–Ω–∫–∞–º–∏ —ç–∫–∑–∞–º–µ–Ω–∞—Ç–æ—Ä–∞")

else:
    print("‚ùå –í —Ñ–∞–π–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫–æ–ª–æ–Ω–∫–∏ '–û—Ü–µ–Ω–∫–∞ —ç–∫–∑–∞–º–µ–Ω–∞—Ç–æ—Ä–∞' –∏–ª–∏ 'pred_score'")

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π
print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π:")
for q in [1, 2, 3, 4]:
    mask = df['‚Ññ –≤–æ–ø—Ä–æ—Å–∞'] == q
    if mask.any():
        scores = df.loc[mask, 'pred_score'].astype(float)
        print(f"   –í–æ–ø—Ä–æ—Å {q}: —Å—Ä.={scores.mean():.2f}, –º–∏–Ω={scores.min():.2f}, –º–∞–∫—Å={scores.max():.2f}")